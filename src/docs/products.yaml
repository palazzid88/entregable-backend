paths:
  /api/products:
    get:
      summary: "Obtener lista de productos"
      description: >
        Obtiene la lista de todos los productos disponibles.
      tags:
        - Productos
      responses:
        200:
          description: "Lista de productos obtenida desde Mongo DB."
          content:
            application/json:
              example: |
                {"_id":{"$oid":"64cc49ffa215e1395716896e"},
                "title":"Trek marlin 4",
                "description":"La Marlin 4 es la bicicleta ideal para iniciarse en los senderos. 
                Es perfecta para los ciclistas que quieren iniciarse en el mountain bike 
                y que buscan una bicicleta equipada con cubiertas taqueadas que, 
                además, les permita desplazarse por la ciudad. Los frenos de disco, 
                la suspensión delantera, el cambio de 21 velocidades
                y los soportes para portabultos y guardabarros hacen que esta bicicleta sea ideal
                tanto para los ciclistas que se inician en los senderos como para aquellos que van en bici a la universidad.",
                "price":{"$numberInt":"300000"},
                "thumbnail":"https://d2r9epyceweg5n.cloudfront.net/stores/002/183/781/products/marlin-4-black1-7a82ce2b0e8a456d5d16551551882770-640-0.webp",
                "code":"222",
                "stock":{"$numberInt":"100"},
                "status":"true",
                "category":"mtb",
                "__v":{"$numberInt":"0"}}

    post:
      summary: "Crear un nuevo producto"
      description: "Crea un nuevo producto en la base de datos."
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: "Producto creado exitosamente."
          content:
            application/json:
              example: |
                {
                  "id": 3,
                  "name": "Producto 3",
                  "category": "Categoría 1"
                }
        400:
          description: "Datos de producto no válidos."

  /api/products/{id}:
    get:
      summary: "Obtener un producto por ID"
      description: "Obtiene un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a obtener"
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Producto obtenido correctamente."
          content:
            application/json:
              example: |
                {
                  "id": 1,
                  "name": "Producto 1",
                  "category": "Categoría 1"
                }
        404:
          description: "Producto no encontrado."

    put:
      summary: "Actualizar un producto por ID"
      description: "Actualiza un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a actualizar"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: "Producto actualizado correctamente."
        400:
          description: "Datos de producto no válidos."
        404:
          description: "Producto no encontrado."

    delete:
      summary: "Eliminar un producto por ID"
      description: "Elimina un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a eliminar"
          required: true
          schema:
            type: integer
      responses:
        204:
          description: "Producto eliminado correctamente."
        404:
          description: "Producto no encontrado."

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
      required:
        - name
        - category
